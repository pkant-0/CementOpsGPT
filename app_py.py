# -*- coding: utf-8 -*-
"""app-py.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/pkant-0/c9cca1dbc70c07e9af127944b8023f43/app-py.ipynb

# CementOpsGPT

CementOpsGPT is a GenAI-powered assistant designed to optimize cement manufacturing using the dry kiln pyro-processing method. It helps plant operators improve fuel efficiency, reduce clinker defects, and troubleshoot operational issues using generative simulations and AI-guided recommendations.

# Kiln Optimization Simulator

Input: Desired cement type (OPC/PPC), raw material composition

Output: Suggested kiln temperature, fuel mix, and feed rate
"""

from transformers import pipeline

optimizer = pipeline("text-generation", model="gpt2")

def suggest_kiln_settings(cement_type, raw_material):
    prompt = f"Suggest optimal kiln settings for {cement_type} cement using {raw_material}."
    result = optimizer(prompt, max_length=100, do_sample=True)[0]['generated_text']
    return result

"""# Troubleshooting Assistant
Input: Operator query (e.g., “Clinker nodules too large”)

Output: Step-by-step guidance using GenAI trained on cement manuals
"""

from transformers import pipeline

assistant = pipeline("text2text-generation", model="google/flan-t5-base")

def troubleshoot(query):
    prompt = f"Troubleshooting guide for: {query}"
    return assistant(prompt)[0]['generated_text']

"""# Prototype (Colab + Hugging Face)"""

import gradio as gr

with gr.Blocks() as demo:
    gr.Markdown("## CementOpsGPT")

    with gr.Tab("Kiln Optimizer"):
        cement_type = gr.Textbox(label="Cement Type (OPC/PPC)")
        raw_material = gr.Textbox(label="Raw Material Composition")
        output = gr.Textbox(label="Suggested Settings")
        btn = gr.Button("Generate")
        btn.click(fn=suggest_kiln_settings, inputs=[cement_type, raw_material], outputs=output)

    with gr.Tab("Troubleshooting Assistant"):
        query = gr.Textbox(label="Issue Description")
        response = gr.Textbox(label="AI Guidance")
        btn2 = gr.Button("Help Me")
        btn2.click(fn=troubleshoot, inputs=query, outputs=response)

demo.launch()